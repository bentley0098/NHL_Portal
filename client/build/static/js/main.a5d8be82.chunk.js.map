{"version":3,"sources":["components/Navigation.jsx","components/Footer.jsx","components/Logos/PDFLogo.png","components/excelExport.js","components/Stock/Stock.jsx","components/Stock/LoadDataSource.js","components/Login/HQicon.ico","components/Login/Login.js","App.js","useToken.js","reportWebVitals.js","index.js"],"names":["withRouter","props","tokenString","sessionStorage","getItem","Username","JSON","parse","username","className","class","to","location","pathname","onClick","removeItem","window","reload","Footer","style","paddingTop","downloadBlob","blob","fileName","link","document","createElement","url","URL","createObjectURL","setAttribute","position","visibility","body","appendChild","click","removeChild","downloadBlob_locations","product","Stock","useState","dataSource","setDataSource","locationData","setLocationData","searchString","setSearchString","useEffect","taskAmount","data","SearchString","string","fetch","then","response","json","length","count","newDataSource","LoadDataSource","gridStyle","height","margin","selected","setSelected","onSelectionChange","useCallback","LoadLocations","gridRef_stock","setGridRef_stock","gridRef_locations","setGridRef_locations","buttonIsDisabled","Form","Label","Control","size","type","placeholder","value","onChange","e","target","OverlayTrigger","placement","overlay","Tooltip","id","Button","variant","marginTop","border","gridRef","wb","Sheets","XLSX","json_to_sheet","current","SheetNames","excelBuffer","bookType","Blob","exportCSV_stock","gridData","customer","doc","jsPDF","bodyData","Product","Description","Quantity","rowData","i","push","header","headerText","moment","Date","format","autoTable","styles","fontSize","theme","headStyles","fillColor","head","didDrawPage","setFontSize","setTextColor","PDFLogo","addImage","text","settings","left","top","save","exportPDF_stock","exportCSV_locations","disabled","Location","BatchID","Expiry","Qty","docName","exportPDF_locations","idProperty","columns","name","defaultFlex","textAlign","enableSelection","handle","loginUser","credentials","a","method","headers","stringify","Login","setToken","setUserName","password","setPassword","handleSubmit","preventDefault","token","alert","src","HQicon","alt","Group","controlId","App","userToken","getToken","setItem","useToken","localStorage","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5d8be82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nimport './components.css'\r\n\r\nfunction Navigation(props) {\r\n  const tokenString = sessionStorage.getItem('token');\r\n  const userToken = JSON.parse(tokenString);\r\n  const Username = userToken.username;\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem('token');\r\n    window.location.reload(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand navbar-dark grid-bg-colour\">\r\n        <div class=\"container\">\r\n          <Link class=\"navbar-brand\" to=\"/\">\r\n            {Username} - WMS Portal\r\n          </Link>\r\n          \r\n          \r\n          <div>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/\">\r\n                  Stock\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n\r\n              <li>\r\n                <div className=\"spacer\"></div>\r\n              </li>\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/Login\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/\" onClick={logout}>\r\n                    Sign Out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);","import React from \"react\";\r\nimport './components.css'\r\n\r\nfunction Footer() {\r\n  return (\r\n    \r\n      <footer className=\"grid-bg-colour fixed-bottom\" style={{paddingTop: 10}}>\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center text-white\">\r\n            Copyright &copy; HQ Software 2021, v0.03\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    \r\n  );\r\n}\r\n\r\nexport default Footer; ","export default __webpack_public_path__ + \"static/media/PDFLogo.d3482e1c.png\";","import jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport PDFLogo from './Logos/PDFLogo.png'\r\nimport * as XLSX from 'xlsx';\r\n\r\nimport moment from 'moment'\r\n\r\nexport const exportCSV_stock = (gridRef) => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n    const ws = XLSX.utils.json_to_sheet(gridRef.current.data);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const blob = new Blob([excelBuffer], {type: fileType});\r\n\r\n    downloadBlob(blob);\r\n};\r\n\r\n\r\nconst downloadBlob = (blob, fileName = 'WMS_Products.xlsx') => {\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', fileName);\r\n    link.style.position = 'absolute';\r\n    link.style.visibility = 'hidden';\r\n  \r\n    document.body.appendChild(link);\r\n  \r\n    link.click();\r\n  \r\n    document.body.removeChild(link);\r\n};\r\n\r\n\r\nexport function  exportPDF_stock(gridData, customer) {\r\n  //console.log(gridData.current.data)\r\n  \r\n  var doc = new jsPDF('landscape', 'pt');\r\n  //var closedIndex = [];\r\n  //var urgentIndex = [];\r\n  //var p1Index = [];\r\n  \r\n  //console.log(gridData.current.data);\r\n  var bodyData = [];\r\n    bodyData= [[\r\n      gridData.current.data[0].Product, \r\n      gridData.current.data[0].Description,\r\n      gridData.current.data[0].Quantity\r\n    ]];\r\n\r\n  var rowData = [];\r\n  for(let i=1; i<gridData.current.data.length; i++){\r\n      rowData = [\r\n        gridData.current.data[i].Product, \r\n        gridData.current.data[i].Description,\r\n        gridData.current.data[i].Quantity\r\n      ];\r\n    \r\n    bodyData.push(rowData);\r\n\r\n  }\r\n\r\n  let formatDate = moment(new Date()).format(\"Do MMMM YYYY\"); \r\n  \r\n  let headerText = \" WMS Products    -    \" + formatDate;\r\n\r\n  let header=[];\r\n  header= ['Product', 'Description', 'Quantity']\r\n  \r\n  \r\n  doc.autoTable({\r\n    styles: { fontSize: 8 },\r\n    theme: 'grid',\r\n    headStyles: {fillColor: [55, 55, 55]},\r\n    head: [header],\r\n    body: bodyData,\r\n    didDrawPage: function (data) {\r\n      // Header\r\n      doc.setFontSize(18)\r\n      doc.setTextColor(40)\r\n      if (PDFLogo) {\r\n        doc.addImage(PDFLogo, 'ico', 20, 20, 46.5, 48, PDFLogo, 'FAST', 0)\r\n      }\r\n      doc.text(headerText, data.settings.margin.left + 50, 50)\r\n\r\n      doc.setFontSize(8)\r\n\r\n     \r\n    },\r\n    margin: { top: 80 }\r\n  })\r\n\r\n  var docName = 'WMS_Products.pdf';\r\n\r\n  //let titleDate = moment(new Date()).format(\"DDMMYYYY\"); \r\n\r\n  doc.save(docName)\r\n}\r\n\r\n\r\nexport const exportCSV_locations = (gridRef, product) => {\r\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n  const ws = XLSX.utils.json_to_sheet(gridRef.current.data);\r\n  const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n  const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n  const blob = new Blob([excelBuffer], {type: fileType});\r\n\r\n  downloadBlob_locations(blob, product);\r\n};\r\n\r\n\r\nconst downloadBlob_locations = (blob, product) => {\r\n  const link = document.createElement('a');\r\n  const url = URL.createObjectURL(blob);\r\n  \r\n  link.setAttribute('href', url);\r\n  link.setAttribute('download', 'WMS_Locations_'+ product +'.xlsx');\r\n  link.style.position = 'absolute';\r\n  link.style.visibility = 'hidden';\r\n\r\n  document.body.appendChild(link);\r\n\r\n  link.click();\r\n\r\n  document.body.removeChild(link);\r\n};\r\n\r\n\r\nexport function  exportPDF_locations(gridData, product) {\r\n  //console.log(gridData.current.data)\r\n\r\nvar doc = new jsPDF('landscape', 'pt');\r\n\r\nvar bodyData = [];\r\n  bodyData= [[\r\n    gridData.current.data[0].Location, \r\n    gridData.current.data[0].BatchID,\r\n    gridData.current.data[0].Expiry,\r\n    gridData.current.data[0].Qty\r\n  ]];\r\n\r\nvar rowData = [];\r\nfor(let i=1; i<gridData.current.data.length; i++){\r\n    rowData = [\r\n      gridData.current.data[i].Location, \r\n      gridData.current.data[i].BatchID,\r\n      gridData.current.data[i].Expiry,\r\n      gridData.current.data[i].Qty\r\n    ];\r\n  \r\n  bodyData.push(rowData);\r\n\r\n}\r\n\r\nlet formatDate = moment(new Date()).format(\"Do MMMM YYYY\"); \r\n\r\nlet headerText = \" WMS Locations - \" + product + \"    -    \" + formatDate;\r\n\r\nlet header=[];\r\nheader= ['Location', 'BatchID', 'Expiry', 'Quantity']\r\n\r\n\r\ndoc.autoTable({\r\n  styles: { fontSize: 8 },\r\n  theme: 'grid',\r\n  headStyles: {fillColor: [55, 55, 55]},\r\n  head: [header],\r\n  body: bodyData,\r\n  didDrawPage: function (data) {\r\n    // Header\r\n    doc.setFontSize(18)\r\n    doc.setTextColor(40)\r\n    if (PDFLogo) {\r\n      doc.addImage(PDFLogo, 'ico', 20, 20, 46.5, 48, PDFLogo, 'FAST', 0)\r\n    }\r\n    doc.text(headerText, data.settings.margin.left + 50, 50)\r\n\r\n    doc.setFontSize(8)\r\n\r\n   \r\n  },\r\n  margin: { top: 80 }\r\n})\r\n\r\nvar docName = 'WMS_Locations_' + product +'.pdf';\r\n\r\n//let titleDate = moment(new Date()).format(\"DDMMYYYY\"); \r\n\r\ndoc.save(docName)\r\n}","import React, {  useState, useEffect, useCallback } from 'react';\r\n//ReactDataGrid.io used for main grid\r\nimport ReactDataGrid from '@inovua/reactdatagrid-community'\r\nimport '@inovua/reactdatagrid-community/base.css'\r\nimport '@inovua/reactdatagrid-community/index.css'\r\nimport '@inovua/reactdatagrid-community/theme/default-dark.css'\r\nimport {LoadDataSource} from './LoadDataSource'\r\nimport './stock.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n// Function to export grid to excel\r\nimport { exportCSV_stock, exportPDF_stock, exportCSV_locations, exportPDF_locations } from '../excelExport.js'\r\nimport {RiFileExcel2Line} from 'react-icons/ri'\r\nimport {ImFilePdf} from 'react-icons/im'\r\n\r\n\r\n\r\n\r\nconst LoadLocations = (selected) => {\r\n  return fetch('/returnLocations/' + selected)\r\n    .then(data => data.json())\r\n} \r\n\r\n//Overall Tasks function that handles the 'Tasks' page\r\nfunction Stock() {\r\n  \r\n  //----- GET CURRENT USER -----//\r\n  //const tokenString = sessionStorage.getItem('token');\r\n  //const userToken = JSON.parse(tokenString);\r\n  //const Username = userToken.username;\r\n  //const UserID = userToken.userId;\r\n\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [locationData, setLocationData] = useState([]);\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  useEffect(() =>{\r\n    setDataSource(LoadDataSource(searchString).data);\r\n  }, [searchString])\r\n\r\n  const gridStyle = {\r\n    height: '83vh', \r\n    margin: 10\r\n  }\r\n\r\n  const columns = [\r\n    {name:'Product', header:'Product', type: 'string', defaultFlex: 0},\r\n    {name:'Description', header:'Description', type: 'string', defaultFlex: 1},\r\n    {name:'Quantity', header:'Total', type: 'number', defaultFlex: 0, textAlign: 'end'}\r\n  ]\r\n\r\n  const theme = 'default-dark';\r\n\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n    setLocationData(LoadLocations(selected));\r\n  }, [])\r\n\r\n  const locationColumns = [\r\n    {name:'Location', header:'Location', type: 'string', defaultFlex: 1},\r\n    {name:'BatchID', header:'Batch', type: 'string', defaultFlex: 1},\r\n    {name:'Expiry', header:'Expiry', type: 'string', defaultFlex: 1},\r\n    {name:'Qty', header:'Quantity', type: 'number', defaultFlex: 1, textAlign: 'end'}\r\n  ]\r\n\r\n  //Store reference to grid for exporting PDF/CSV\r\n  const [gridRef_stock, setGridRef_stock] = useState(null);\r\n  const [gridRef_locations, setGridRef_locations] = useState(null);\r\n\r\n  //Allows button to be pressed when some tasks are selected\r\n  let buttonIsDisabled = true;\r\n  if(selected===null) {\r\n    //console.log(selected);\r\n    buttonIsDisabled = true;\r\n  } else {\r\n    buttonIsDisabled = false;\r\n  }\r\n  //----------//\r\n  \r\n  return(\r\n    <>\r\n      <div className=\"stock-container\">\r\n        <div className=\"filter\">\r\n          <Form.Label className=\"search-label\">Search: &nbsp;</Form.Label>\r\n          <div className=\"text-input\">\r\n            \r\n            <Form.Control \r\n              size=\"sm\" \r\n              type=\"text\" \r\n              placeholder=\"Search...\" \r\n              value={searchString}\r\n              onChange={e=> setSearchString(e.target.value)}\r\n            />\r\n          </div>\r\n            <div className=\"stock_exports\">\r\n                {/* Export to Excel (Stock Grid) */}\r\n          <OverlayTrigger key='CSVEXPORT' placement='bottom'\r\n                  overlay={\r\n                    <Tooltip id='tooltip-excel'>\r\n                      Export to Excel\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n            <Button variant=\"secondary\"  style={{margin:'5px', marginTop:'0px', border: '1px solid black'}}\r\n            \tonClick={ () => {\r\n                const gridData = gridRef_stock;\r\n                exportCSV_stock(gridData);\r\n              }}\r\n\r\n            >\r\n            <RiFileExcel2Line />\r\n            </Button>\r\n          </OverlayTrigger>\r\n          {/* Export to PDF (Stock Grid) */}\r\n          <OverlayTrigger key='PDFEXPORT' placement='bottom'\r\n            overlay={\r\n              <Tooltip id='tooltip-pdf'>\r\n                Export to PDF\r\n              </Tooltip>\r\n            } \r\n          >\r\n               <Button variant=\"secondary\" style={{margin:'5px', marginTop:'0px', border: '1px solid black'}}\r\n            \tonClick={ () => {\r\n                const gridData = gridRef_stock;\r\n                exportPDF_stock(gridData);\r\n              }}\r\n            \r\n            >\r\n              <ImFilePdf />\r\n            </Button>    \r\n          </OverlayTrigger>\r\n            </div>\r\n          \r\n            \r\n          <div className=\"locations_exports\">\r\n            {/* Export to Excel (Locations Grid) */}\r\n            <OverlayTrigger key='CSVEXPORT' placement='bottom'\r\n                  overlay={\r\n                    <Tooltip id='tooltip-excel'>\r\n                      Export to Excel\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n            <Button variant=\"light\"  style={{margin:'5px', marginTop:'0px', border: '1px solid black'}}\r\n            \tonClick={ () => {\r\n                const gridData = gridRef_locations;\r\n                exportCSV_locations(gridData, selected);\r\n                \r\n              }}\r\n              disabled={buttonIsDisabled}\r\n            >\r\n            <RiFileExcel2Line />\r\n            </Button>\r\n          </OverlayTrigger>\r\n          {/* Export to PDF (Locations Grid) */}\r\n          <OverlayTrigger key='PDFEXPORT' placement='bottom'\r\n            overlay={\r\n              <Tooltip id='tooltip-pdf'>\r\n                Export to PDF\r\n              </Tooltip>\r\n            } \r\n          >\r\n               <Button variant=\"light\" style={{margin:'5px', marginTop:'0px', border: '1px solid black'}}\r\n            \tonClick={ () => {\r\n                const gridData = gridRef_locations;\r\n                exportPDF_locations(gridData, selected);\r\n              }}\r\n              disabled={buttonIsDisabled}\r\n            >\r\n              <ImFilePdf />\r\n            </Button>    \r\n          </OverlayTrigger>\r\n          </div>\r\n          \r\n          \r\n        </div>\r\n        <div className=\"grid-container\">\r\n          <div className=\"stock-grid\">\r\n            <ReactDataGrid\r\n            idProperty=\"Product\"\r\n            columns={columns}\r\n            dataSource={dataSource}\r\n            style={gridStyle}\r\n            theme={theme}\r\n            enableSelection={true}\r\n            onSelectionChange={onSelectionChange}\r\n            handle={setGridRef_stock}\r\n            \t/>\r\n          </div>\r\n          <div className=\"location-grid\">\r\n            <ReactDataGrid\r\n              idProperty=\"Location\"\r\n              columns={locationColumns}\r\n              dataSource={locationData}\r\n              style={gridStyle}\r\n              handle={setGridRef_locations}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </>       \r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Stock;  ","export function LoadDataSource (searchString) {\r\n\r\n    //-----LOAD TASKS FOR THE GRID -----//\r\n    //const [dataSource, setDataSource] = useState([]);\r\n    //const [taskAmount, setTaskAmount] = useState(0);\r\n\r\n    let dataSource = []\r\n    let taskAmount = 0;\r\n\r\n    const SearchString = searchString;\r\n    \r\n    \r\n      const newDataSource = (SearchString) =>{\r\n        \r\n        let string = SearchString\r\n        if(string==='') {\r\n          string = 'EMPTY_SEARCH_STRING'\r\n        }\r\n        return fetch('/returnStock/'+ string).then(response => {\r\n\r\n          return response.json().then(data => {\r\n            taskAmount = data.length;\r\n            return { data, count: data.length };\r\n          })\r\n        });\r\n      }\r\n      dataSource = newDataSource(SearchString);\r\n    \r\n    //----------//\r\n\r\n    let returnValues = {\r\n      data: dataSource,\r\n      count: taskAmount\r\n    }\r\n\r\n    return returnValues;\r\n}","export default __webpack_public_path__ + \"static/media/HQicon.9e6c548a.ico\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Login.css';\r\n\r\nimport Footer from './../Footer.jsx'\r\n\r\nimport HQicon from './HQicon.ico'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async e => {\r\n    \r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n        username,\r\n        password\r\n    });\r\n    \r\n    \r\n    if(token.token!=='q>)*8n[TfhTyZAW'){\r\n        alert('Invalid Username/Password');\r\n        setUserName('');\r\n        setPassword('');\r\n    } else{\r\n        setToken(token);\r\n    }\r\n     \r\n    \r\n  }\r\n  \r\n  // Use Below to render logo conditionaly based on the current domain  -  eg: nhl.hqsoftware.com will render nhl.ico\r\n  //const domain= window.location.hostname;\r\n  return(\r\n    <>\r\n    \r\n    \r\n    <div className=\"login-logo\"><img src={HQicon} alt=\"logo\" /></div>\r\n    <div className=\"login-wrapper\">\r\n      <h2>WMS Portal - Log In</h2>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"emailInput\">\r\n          <Form.Label>User:</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter username\" onChange={e => setUserName(e.target.value)}/>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"passwordInput\">\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n        </Form.Group>\r\n        <Button variant=\"secondary\" type=\"submit\" onClick={handleSubmit} className=\"button-to-the-right\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n\r\n    <Footer />\r\n    </>\r\n  )\r\n\r\n  \r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Navigation, Stock, Footer } from \"./components\";\r\nimport useToken from './useToken.js';\r\nimport Login from './components/Login/Login'\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  const { token, setToken } = useToken();\r\n  \r\n  if(token && token!=='q>)*8n[TfhTyZAW') {\r\n    alert(\"Invalid Log-in Token\");\r\n    localStorage.removeItem('token');\r\n  }\r\n  \r\n  \r\n  if(!token) {\r\n    return <Login setToken={setToken} />\r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navigation />\r\n        <Switch>\r\n          \r\n          <Route path=\"/\" exact component={() => <Stock />} />\r\n          \r\n        </Switch>\r\n        <Footer />\r\n        \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n    const getToken = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.token\r\n    };\r\n    \r\n    const [token, setToken] = useState(getToken());\r\n\r\n    const saveToken = userToken => {\r\n        sessionStorage.setItem('token', JSON.stringify(userToken));\r\n        setToken(userToken.token);\r\n    };\r\n\r\n    return {\r\n        setToken: saveToken,\r\n        token\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}